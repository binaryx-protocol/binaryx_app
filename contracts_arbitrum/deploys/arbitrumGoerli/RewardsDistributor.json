{
  "address": "0x7b87331F6a362Efc465f8a7D722d508213a7A4AB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "contract IAddressesProvider",
          "name": "_addressesProvider",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AssetReservePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CompanyPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "startTime",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "endTime",
          "type": "uint128"
        }
      ],
      "name": "PaidRent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "PoolAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "PoolInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UserBalanceUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_startTimes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_endTimes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rewardsPerSecond",
          "type": "uint256[]"
        }
      ],
      "name": "addEmissionPointsForPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressesProvider",
      "outputs": [
        {
          "internalType": "contract IAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "calculateActualEmissionPointPerPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "claimableRewards",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "emissionSchedule",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "startTime",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "endTime",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "rewardsPerSecond",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "emissionScheduleLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        }
      ],
      "name": "getEmissionPoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "startTime",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "endTime",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "rewardsPerSecond",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRewardsDistributor.EmissionPoint[]",
          "name": "emissionPoints",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "companyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetReserveAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "companyCommission",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "assetReserveCommission",
          "type": "uint256"
        }
      ],
      "name": "initializePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "onUserBalanceChanged",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "startTime",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "endTime",
          "type": "uint128"
        }
      ],
      "name": "payForRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accRewardPerShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentEmissionPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isInitialized",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "companyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "assetReserveAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "companyCommission",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetReserveCommission",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRewardsDistributor.Commission",
          "name": "commission",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setClaimReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseClaimable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastEmissionPoint",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7c3ce3874c30a10e9b8394f412b72ba6276804e41ed0ad7a3ff3e33e288ee757",
  "receipt": {
    "to": null,
    "from": "0xC6BdFA7e694db5621CdcB7242d1931FC586f6d1d",
    "contractAddress": "0x7b87331F6a362Efc465f8a7D722d508213a7A4AB",
    "transactionIndex": 1,
    "gasUsed": "3989281",
    "logsBloom": "0x
    "blockHash": "0xa034bdedc945eb2af7056ca7f6279e1344b42a17c5d01fd0c4a77a8a38979702",
    "transactionHash": "0x7c3ce3874c30a10e9b8394f412b72ba6276804e41ed0ad7a3ff3e33e288ee757",
    "logs": [],
    "blockNumber": 3229404,
    "cumulativeGasUsed": "3989281",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCdF49BF7135826FA0e84341ac74a881AD92F9Ac6",
    "0xe4389d82FC544E13C9925Ab1A106951eF6238168"
  ],
  "numDeployments": 1,
  "solcInputHash": "8360ed8ab91bd6123437d68828943be0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IAddressesProvider\",\"name\":\"_addressesProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AssetReservePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CompanyPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"startTime\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"}],\"name\":\"PaidRent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"PoolAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"PoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"UserBalanceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_startTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_endTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardsPerSecond\",\"type\":\"uint256[]\"}],\"name\":\"addEmissionPointsForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"contract IAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"calculateActualEmissionPointPerPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"claimableRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"emissionSchedule\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"startTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"rewardsPerSecond\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"emissionScheduleLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"}],\"name\":\"getEmissionPoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"startTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"rewardsPerSecond\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsDistributor.EmissionPoint[]\",\"name\":\"emissionPoints\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"companyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetReserveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"companyCommission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetReserveCommission\",\"type\":\"uint256\"}],\"name\":\"initializePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"onUserBalanceChanged\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"}],\"name\":\"payForRent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentEmissionPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"companyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetReserveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"companyCommission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetReserveCommission\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsDistributor.Commission\",\"name\":\"commission\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokenDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setClaimReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseClaimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastEmissionPoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v3/RewardsDistributor.sol\":\"RewardsDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/v3/RewardsDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IRewardsDistributor.sol\\\";\\nimport \\\"./interfaces/IAddressesProvider.sol\\\";\\n\\ncontract RewardsDistributor is IRewardsDistributor {\\n\\n  uint256 private constant COMMISSION_PRECISION = 10000; // 100%\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == addressesProvider.getRewardsDistributorAdmin(), \\\"RewardsDistributor: caller is not the RewardsDistributorAdmin\\\");\\n    _;\\n  }\\n\\n  IAddressesProvider public immutable addressesProvider;\\n  IERC20 public immutable rewardToken;\\n  uint256 public immutable rewardTokenDecimals = 1e6;\\n\\n  address[] public registeredAssets;\\n\\n  // token => Pool Info for that token.\\n  mapping(address => PoolInfo) public poolInfo;\\n\\n  // token => Array of Emission point structs.\\n  mapping(address => EmissionPoint[]) public emissionSchedule;\\n\\n  // token => user => Info of each user that stakes LP tokens.\\n  mapping(address => mapping(address => UserInfo)) public userInfo;\\n\\n  // user => receiver\\n  mapping(address => address) public claimReceiver;\\n\\n  constructor(IERC20 _rewardToken, IAddressesProvider _addressesProvider) {\\n    require(address(_addressesProvider) != address(0), \\\"RewardsDistributor: addresses provider is the zero address\\\");\\n    require(address(_rewardToken) != address(0), \\\"RewardsDistributor: reward token is the zero address\\\");\\n    addressesProvider = _addressesProvider;\\n    rewardToken = _rewardToken;\\n  }\\n\\n  function poolLength() external view override returns (uint256) {\\n    return registeredAssets.length;\\n  }\\n\\n  function calculateActualEmissionPointPerPool(address _token) public view override returns (uint256) {\\n    uint256 currentEmissionPoint = poolInfo[_token].currentEmissionPoint;\\n    EmissionPoint[] storage schedule = emissionSchedule[_token];\\n    if (schedule.length == 0) {\\n      return 0;\\n    }\\n    for (uint256 i = currentEmissionPoint; i < schedule.length; i++) {\\n      if (schedule[i].startTime <= block.timestamp && block.timestamp < schedule[i].endTime) {\\n        return i;\\n      }\\n    }\\n    return schedule.length - 1;\\n  }\\n\\n  function emissionScheduleLength(address _token) external view override returns (uint256) {\\n    return emissionSchedule[_token].length;\\n  }\\n\\n  function getEmissionPoints(address _token, uint256 startIndex) external view override returns (EmissionPoint[] memory emissionPoints) {\\n    uint256 length = emissionSchedule[_token].length;\\n    emissionPoints = new EmissionPoint[](length - startIndex);\\n    for (uint256 i = 0; i < length - startIndex; i++) {\\n      emissionPoints[i] = emissionSchedule[_token][i + startIndex];\\n    }\\n  }\\n\\n  function claimableRewards(address _user, address[] calldata _tokens) external view override returns (uint256[] memory) {\\n    uint256[] memory claimable = new uint256[](_tokens.length);\\n    for (uint256 i = 0; i < _tokens.length; i++) {\\n      address token = _tokens[i];\\n      PoolInfo memory pool = poolInfo[token];\\n      uint256 firstEmissionPoint = pool.currentEmissionPoint;\\n      uint256 lastEmissionPoint = calculateActualEmissionPointPerPool(token);\\n      if (firstEmissionPoint == lastEmissionPoint) {\\n        EmissionPoint memory emissionPoint = emissionSchedule[token][pool.currentEmissionPoint];\\n        uint256 startTime = emissionPoint.startTime > pool.lastRewardTime ? emissionPoint.startTime : pool.lastRewardTime;\\n        uint256 duration = block.timestamp - startTime;\\n        uint256 reward = duration * emissionPoint.rewardsPerSecond;\\n        pool.accRewardPerShare = pool.accRewardPerShare + (reward * 1e12 / (pool.totalSupply * rewardTokenDecimals / pool.decimals));\\n        pool.lastRewardTime = block.timestamp;\\n      } else {\\n        for (uint256 j = firstEmissionPoint; j <= lastEmissionPoint; j++) {\\n          EmissionPoint memory emissionPoint = emissionSchedule[token][j];\\n          uint256 startTime = emissionPoint.startTime > pool.lastRewardTime ? emissionPoint.startTime : pool.lastRewardTime;\\n          uint256 endTime = emissionPoint.endTime > block.timestamp ? block.timestamp : emissionPoint.endTime;\\n          uint256 duration = endTime - startTime;\\n          uint256 reward = duration * emissionPoint.rewardsPerSecond;\\n          pool.accRewardPerShare = pool.accRewardPerShare + (reward * 1e12 / (pool.totalSupply * rewardTokenDecimals / pool.decimals));\\n          pool.lastRewardTime = endTime;\\n        }\\n      }\\n      UserInfo memory user = userInfo[token][_user];\\n      claimable[i] = user.amount * rewardTokenDecimals / pool.decimals * pool.accRewardPerShare / 1e12 - user.rewardDebt;\\n    }\\n    return claimable;\\n  }\\n\\n  function addPool(address _token, uint256 decimals, uint256 _totalSupply) external override onlyOwner {\\n    require(poolInfo[_token].lastRewardTime == 0);\\n    registeredAssets.push(_token);\\n    poolInfo[_token] = PoolInfo({\\n    totalSupply : _totalSupply,\\n    lastRewardTime : block.timestamp,\\n    accRewardPerShare : 0,\\n    currentEmissionPoint : 0,\\n    isInitialized : false,\\n    decimals : 10 ** decimals,\\n    commission : Commission({\\n    companyAddress : address(0),\\n    assetReserveAddress : address(0),\\n    companyCommission : 0,\\n    assetReserveCommission : 0\\n    })\\n    });\\n    emit PoolAdded(_token, _totalSupply);\\n  }\\n\\n  function addEmissionPointsForPool(address _token, uint256[] memory _startTimes, uint256[] memory _endTimes, uint256[] memory _rewardsPerSecond) external override onlyOwner {\\n    require(_startTimes.length == _endTimes.length);\\n    require(_startTimes.length == _rewardsPerSecond.length);\\n    for (uint256 i = 0; i < _startTimes.length; i++) {\\n      emissionSchedule[_token].push(EmissionPoint({\\n      startTime : uint128(_startTimes[i]),\\n      endTime : uint128(_endTimes[i]),\\n      rewardsPerSecond : _rewardsPerSecond[i]\\n      }));\\n    }\\n    _updatePool(_token);\\n  }\\n\\n  function initializePool(address _token, address companyAddress, address assetReserveAddress, uint256 companyCommission, uint256 assetReserveCommission) external override onlyOwner {\\n    require(!poolInfo[_token].isInitialized, \\\"Pool already initialized\\\");\\n    require(emissionSchedule[_token].length > 0, \\\"Emission schedule not set\\\");\\n    require(companyAddress != address(0), \\\"Company address not set\\\");\\n    require(assetReserveAddress != address(0), \\\"Asset reserve address not set\\\");\\n    poolInfo[_token].isInitialized = true;\\n    poolInfo[_token].commission = Commission({\\n    companyAddress : companyAddress,\\n    assetReserveAddress : assetReserveAddress,\\n    companyCommission : companyCommission,\\n    assetReserveCommission : assetReserveCommission\\n    });\\n\\n    emit PoolInitialized(_token);\\n  }\\n\\n  function _updatePool(address _token) internal {\\n    PoolInfo storage pool = poolInfo[_token];\\n    if (block.timestamp <= pool.lastRewardTime || !pool.isInitialized || emissionSchedule[_token].length == 0) {\\n      return;\\n    }\\n    uint256 firstEmissionPoint = pool.currentEmissionPoint;\\n    uint256 lastEmissionPoint = calculateActualEmissionPointPerPool(_token);\\n    if (firstEmissionPoint == lastEmissionPoint) {\\n      EmissionPoint memory emissionPoint = emissionSchedule[_token][pool.currentEmissionPoint];\\n      uint256 startTime = emissionPoint.startTime > pool.lastRewardTime ? emissionPoint.startTime : pool.lastRewardTime;\\n      uint256 duration = block.timestamp - startTime;\\n      uint256 reward = duration * emissionPoint.rewardsPerSecond;\\n      pool.accRewardPerShare = pool.accRewardPerShare + (reward * 1e12 / (pool.totalSupply * rewardTokenDecimals / pool.decimals));\\n      pool.lastRewardTime = block.timestamp;\\n    }\\n    else {\\n      for (uint256 i = firstEmissionPoint; i <= lastEmissionPoint; i++) {\\n        EmissionPoint memory emissionPoint = emissionSchedule[_token][i];\\n        uint256 endTime = emissionPoint.endTime > block.timestamp ? block.timestamp : emissionPoint.endTime;\\n        uint256 startTime = emissionPoint.startTime > pool.lastRewardTime ? emissionPoint.startTime : pool.lastRewardTime;\\n        uint256 duration = endTime - startTime;\\n        uint256 reward = duration * emissionPoint.rewardsPerSecond;\\n        pool.accRewardPerShare = pool.accRewardPerShare + (reward * 1e12 / (pool.totalSupply * rewardTokenDecimals / pool.decimals));\\n        pool.lastRewardTime = emissionPoint.endTime;\\n      }\\n      pool.currentEmissionPoint = lastEmissionPoint;\\n    }\\n  }\\n\\n  function onUserBalanceChanged(address _user, uint256 _balance) external override {\\n    PoolInfo storage pool = poolInfo[msg.sender];\\n    require(pool.lastRewardTime > 0);\\n    _updatePool(msg.sender);\\n    UserInfo storage user = userInfo[msg.sender][_user];\\n    if (user.amount > 0) {\\n      uint256 pending = user.amount * rewardTokenDecimals / pool.decimals * pool.accRewardPerShare / 1e12 - user.rewardDebt;\\n      if (pending > 0) {\\n        user.baseClaimable += pending;\\n      }\\n    }\\n    user.amount = _balance;\\n    user.rewardDebt = _balance * pool.accRewardPerShare / 1e12;\\n\\n    emit UserBalanceUpdated(msg.sender, _user, _balance);\\n  }\\n\\n  function setClaimReceiver(address _user, address _receiver) external override {\\n    require(msg.sender == _user, \\\"Only user can set claim receiver\\\");\\n    claimReceiver[_user] = _receiver;\\n  }\\n\\n  function claim(address _user, address[] calldata _tokens) external override {\\n    uint256 pending;\\n    for (uint i = 0; i < _tokens.length; i++) {\\n      PoolInfo storage pool = poolInfo[_tokens[i]];\\n      require(pool.lastRewardTime > 0);\\n      _updatePool(_tokens[i]);\\n\\n      UserInfo storage user = userInfo[_tokens[i]][_user];\\n      uint256 currentRewardDebt = user.amount * rewardTokenDecimals / pool.decimals * pool.accRewardPerShare / 1e12;\\n      pending = pending + (currentRewardDebt - user.rewardDebt) + user.baseClaimable;\\n      user.baseClaimable = 0;\\n      user.rewardDebt = currentRewardDebt;\\n    }\\n    safeRewardTokenTransfer(_user, pending);\\n    emit Claimed(_user, pending);\\n  }\\n\\n  function safeRewardTokenTransfer(address _to, uint256 _amount) private {\\n    uint256 rewardTokenBalance = rewardToken.balanceOf(address(this));\\n    if (_amount > rewardTokenBalance) {\\n      rewardToken.transfer(_to, rewardTokenBalance);\\n    } else {\\n      rewardToken.transfer(_to, _amount);\\n    }\\n  }\\n\\n  function payForRent(address token, uint256 amount, uint128 startTime, uint128 endTime) external override {\\n    require(poolInfo[token].isInitialized, \\\"Pool not initialized\\\");\\n    require(amount > 0, \\\"Asset: amount must be greater than 0\\\");\\n    require(startTime < endTime, \\\"Asset: startTime must be less than endTime\\\");\\n    uint256 companyPart = amount * poolInfo[token].commission.companyCommission / COMMISSION_PRECISION;\\n    uint256 assetReservePart = amount * poolInfo[token].commission.assetReserveCommission / COMMISSION_PRECISION;\\n    uint256 userPart = amount - companyPart - assetReservePart;\\n    rewardToken.transferFrom(msg.sender, poolInfo[token].commission.companyAddress, companyPart);\\n    rewardToken.transferFrom(msg.sender, poolInfo[token].commission.assetReserveAddress, assetReservePart);\\n    rewardToken.transferFrom(msg.sender, address(this), userPart);\\n    emit PaidRent(msg.sender, token, amount, startTime, endTime);\\n    emit CompanyPaid(token, companyPart);\\n    emit AssetReservePaid(token, assetReservePart);\\n  }\\n}\\n\",\"keccak256\":\"0xd986587cccae95bac5bff3cb592bed1c15d2bcfd1361e648c812c02dfbcb2e33\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAddressesProvider {\\n  event AddressSet(bytes32 id, address indexed newAddress);\\n  event RewardDistributorUpdated(address indexed newAddress);\\n  event AssetPriceOracleUpdated(address indexed newAddress);\\n  event MasterSeriesUpdated(address indexed newAddress);\\n  event RewardDistributorAdminUpdated(address indexed newAddress);\\n  event AssetPriceOracleAdminUpdated(address indexed newAddress);\\n  event EmergencyAdminUpdated(address indexed newAddress);\\n  event PropertyFactoryUpdated(address indexed newAddress);\\n  event PropertyFactoryAdminUpdated(address indexed newAddress);\\n\\n  function setAddress(bytes32 id, address newAddress) external;\\n  function getAddress(bytes32 id) external view returns (address);\\n  function getRewardsDistributor() external view returns (address);\\n  function setRewardsDistributor(address _rewardDistributor) external;\\n  function getAssetPriceOracle() external view returns (address);\\n  function setAssetPriceOracle(address _assetPriceOracle) external;\\n  function getMasterSeries() external view returns (address);\\n  function setMasterSeries(address _masterSeries) external;\\n  function getRewardsDistributorAdmin() external view returns (address);\\n  function setRewardsDistributorAdmin(address _rewardDistributorAdmin) external;\\n  function getAssetPriceOracleAdmin() external view returns (address);\\n  function setAssetPriceOracleAdmin(address _assetPriceOracleAdmin) external;\\n  function getEmergencyAdmin() external view returns (address);\\n  function setEmergencyAdmin(address _emergencyAdmin) external;\\n  function getPropertyFactory() external view returns (address);\\n  function setPropertyFactory(address _propertyFactory) external;\\n  function getPropertyFactoryAdmin() external view returns (address);\\n  function setPropertyFactoryAdmin(address _propertyFactoryAdmin) external;\\n}\\n\",\"keccak256\":\"0xcaf0c2635bda0ddd52342504531d9ced211732b3248080d38f3e59cecd67a93c\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IRewardsDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IRewardsDistributor {\\n  event UserBalanceUpdated(address indexed asset, address indexed user, uint256 balance);\\n  event Claimed(address indexed user, uint256 amount);\\n  event PoolAdded(address indexed asset, uint256 totalSupply);\\n  event PoolInitialized(address indexed asset);\\n  event PaidRent(address indexed user, address indexed asset, uint256 amount, uint128 startTime, uint128 endTime);\\n  event CompanyPaid(address indexed asset, uint256 amount);\\n  event AssetReservePaid(address indexed asset, uint256 amount);\\n\\n  struct Commission {\\n    address companyAddress;\\n    address assetReserveAddress;\\n    uint256 companyCommission; // 1000 = 10% | 100 = 1% | 10 = 0.1%\\n    uint256 assetReserveCommission; // 1000 = 10% | 100 = 1% | 10 = 0.1%\\n  }\\n\\n  struct UserInfo {\\n    uint256 amount;\\n    uint256 rewardDebt;\\n    uint256 baseClaimable;\\n    uint256 lastEmissionPoint;\\n  }\\n\\n  struct PoolInfo {\\n    uint256 totalSupply;\\n    uint256 decimals;\\n    uint256 lastRewardTime; // Last second that reward distribution occurs.\\n    uint256 accRewardPerShare; // Accumulated rewards per share, times 1e12.\\n    uint256 currentEmissionPoint;\\n    bool isInitialized;\\n    Commission commission;\\n  }\\n\\n  struct EmissionPoint {\\n    uint128 startTime;\\n    uint128 endTime;\\n    uint256 rewardsPerSecond;\\n  }\\n\\n  function poolLength() external view returns (uint256);\\n  function emissionScheduleLength(address _token) external view returns (uint256);\\n  function getEmissionPoints(address _token, uint256 startIndex) external view returns (EmissionPoint[] memory emissionPoints);\\n  function calculateActualEmissionPointPerPool(address _token) external view returns (uint256);\\n  function claim(address user, address[] calldata _tokens) external;\\n  function onUserBalanceChanged(address _user, uint256 _balance) external;\\n  function setClaimReceiver(address _user, address _receiver) external;\\n  function addPool(address _token, uint256 _decimals, uint256 _totalSupply) external;\\n  function initializePool(address _token, address companyAddress, address assetReserveAddress, uint256 companyCommission, uint256 assetReserveCommission) external;\\n  function addEmissionPointsForPool(address _token, uint256[] memory _startTimes, uint256[] memory _endTimes, uint256[] memory _rewardsPerSecond) external;\\n  function payForRent(address _asset, uint256 _amount, uint128 _startTime, uint128 _endTime) external;\\n  function claimableRewards(address _user, address[] calldata _tokens) external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0xe198f55041e2230d4363c8487eb7769631744e33d530666b8bf2a54568843a92\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806375fa1bcd116100ad578063a083bd3c11610071578063a083bd3c1461035c578063c72c4d101461038c578063cbbf3385146103aa578063e20c5a8a146103da578063f7c618c11461040a5761012c565b806375fa1bcd146102a05780637b7e1135146102bc5780638e2eba09146102ec5780639a7b5f11146103085780639bdcecd11461033e5761012c565b8063173e51f7116100f4578063173e51f71461020057806317afe17c1461021c57806317ccd7ee1461024c5780633328756414610268578063420637cf146102845761012c565b806303eb7b8214610131578063081e3eda1461014d5780630cb3a60a1461016b5780630f208beb1461019b578063165c029c146101ce575b600080fd5b61014b600480360381019061014691906136f3565b610428565b005b61015561076f565b6040516101629190613e98565b60405180910390f35b6101856004803603810190610180919061379e565b61077b565b6040516101929190613cc7565b60405180910390f35b6101b560048036038101906101b091906135e8565b6109f9565b6040516101c59493929190613eea565b60405180910390f35b6101e860048036038101906101e3919061379e565b610a36565b6040516101f793929190613e61565b60405180910390f35b61021a60048036038101906102159190613624565b610ab5565b005b6102366004803603810190610231919061369b565b610f8d565b6040516102439190613ce9565b60405180910390f35b6102666004803603810190610261919061383d565b611820565b005b610282600480360381019061027d91906135e8565b611c05565b005b61029e600480360381019061029991906137da565b611cf5565b005b6102ba60048036038101906102b5919061379e565b6122f4565b005b6102d660048036038101906102d19190613596565b612512565b6040516102e39190613e98565b60405180910390f35b6103066004803603810190610301919061369b565b612705565b005b610322600480360381019061031d9190613596565b6129f2565b6040516103359796959493929190613f2f565b60405180910390f35b610346612b0b565b6040516103539190613e98565b60405180910390f35b610376600480360381019061037191906138b5565b612b2f565b6040516103839190613c4c565b60405180910390f35b610394612b6e565b6040516103a19190613d0b565b60405180910390f35b6103c460048036038101906103bf9190613596565b612b92565b6040516103d19190613e98565b60405180910390f35b6103f460048036038101906103ef9190613596565b612bde565b6040516104019190613c4c565b60405180910390f35b610412612c11565b60405161041f9190613d26565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632fecc7dc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048e57600080fd5b505afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c691906135bf565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90613e01565b60405180910390fd5b815183511461054157600080fd5b805183511461054f57600080fd5b60005b835181101561075f57600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052808684815181106105de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516fffffffffffffffffffffffffffffffff168152602001858481518110610636577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516fffffffffffffffffffffffffffffffff16815260200184848151811061068e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506040820151816001015550508080610757906143d6565b915050610552565b5061076984612c35565b50505050565b60008080549050905090565b60606000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905082816107d091906142c5565b67ffffffffffffffff81111561080f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561084857816020015b6108356133f3565b81526020019060019003908161082d5790505b50915060005b838261085a91906142c5565b8110156109f157600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084826108ac9190614073565b815481106108e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016001820154815250508382815181106109d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806109e9906143d6565b91505061084e565b505092915050565b6003602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154905084565b60026020528160005260406000208181548110610a5257600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16908060010154905083565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632fecc7dc6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1b57600080fd5b505afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5391906135bf565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb790613e01565b60405180910390fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff1615610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4790613e21565b60405180910390fd5b6000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011610cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccc90613e41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90613d41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610db5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dac90613da1565b60405180910390fd5b60018060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160006101000a81548160ff02191690831515021790555060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815250600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301559050508473ffffffffffffffffffffffffffffffffffffffff167fcad8c9d32507393b6508ca4a888b81979919b477510585bde8488f153072d6f360405160405180910390a25050505050565b606060008383905067ffffffffffffffff811115610fd4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156110025781602001602082028036833780820191505090505b50905060005b8484905081101561181457600085858381811061104e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906110639190613596565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505081525050905060008160800151905060006111e884612512565b905080821415611418576000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084608001518154811061126f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200160018201548152505090506000846040015182600001516fffffffffffffffffffffffffffffffff161161135557846040015161136d565b81600001516fffffffffffffffffffffffffffffffff165b90506000814261137d91906142c5565b90506000836040015182611391919061426b565b905086602001517f000000000000000000000000000000000000000000000000000000000000000088600001516113c8919061426b565b6113d291906140c9565b64e8d4a51000826113e3919061426b565b6113ed91906140c9565b87606001516113fc9190614073565b8760600181815250504287604001818152505050505050611697565b60008290505b818111611695576000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061149e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200160018201548152505090506000856040015182600001516fffffffffffffffffffffffffffffffff161161158457856040015161159c565b81600001516fffffffffffffffffffffffffffffffff165b905060004283602001516fffffffffffffffffffffffffffffffff16116115d95782602001516fffffffffffffffffffffffffffffffff166115db565b425b9050600082826115eb91906142c5565b905060008460400151826115ff919061426b565b905088602001517f00000000000000000000000000000000000000000000000000000000000000008a60000151611636919061426b565b61164091906140c9565b64e8d4a5100082611651919061426b565b61165b91906140c9565b896060015161166a9190614073565b896060018181525050828960400181815250505050505050808061168d906143d6565b91505061141e565b505b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806020015164e8d4a51000856060015186602001517f0000000000000000000000000000000000000000000000000000000000000000856000015161178f919061426b565b61179991906140c9565b6117a3919061426b565b6117ad91906140c9565b6117b791906142c5565b8787815181106117f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505050505050808061180c906143d6565b915050611008565b50809150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632fecc7dc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561188657600080fd5b505afa15801561189a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118be91906135bf565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461192b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192290613e01565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541461197a57600080fd5b6000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060e0016040528082815260200183600a6119fb919061414d565b815260200142815260200160008152602001600081526020016000151581526020016040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815250815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160060160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015550509050508273ffffffffffffffffffffffffffffffffffffffff167f0c98febfffcec480c66a977e13f14bafdb5199ea9603591a0715b0cabe0c3ae282604051611bf89190613e98565b60405180910390a2505050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6a90613de1565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff16611d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7b90613d81565b60405180910390fd5b60008311611dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dbe90613dc1565b60405180910390fd5b806fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1610611e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2490613d61565b60405180910390fd5b6000612710600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016002015485611e83919061426b565b611e8d91906140c9565b90506000612710600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016003015486611ee5919061426b565b611eef91906140c9565b90506000818387611f0091906142c5565b611f0a91906142c5565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b8152600401611fce93929190613c67565b602060405180830381600087803b158015611fe857600080fd5b505af1158015611ffc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612020919061388c565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b81526004016120e393929190613c67565b602060405180830381600087803b1580156120fd57600080fd5b505af1158015612111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612135919061388c565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161219393929190613c67565b602060405180830381600087803b1580156121ad57600080fd5b505af11580156121c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e5919061388c565b508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9cbdb4e6e63af5ac9a1e37be0cb94716affef8d37d2d03a9bf350876e28cc2f488888860405161224793929190613eb3565b60405180910390a38673ffffffffffffffffffffffffffffffffffffffff167f435380b3e997eebf835b5beb720605ea53c6574d1dcae2a7a38ba8fcf2d0fe9b846040516122959190613e98565b60405180910390a28673ffffffffffffffffffffffffffffffffffffffff167f75c78be7de8aa2cee5dd391c96ab7c0900828e7afe7aece650b9089de99d2f26836040516122e39190613e98565b60405180910390a250505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600201541161234857600080fd5b61235133612c35565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541115612476576000816001015464e8d4a51000846003015485600101547f00000000000000000000000000000000000000000000000000000000000000008660000154612425919061426b565b61242f91906140c9565b612439919061426b565b61244391906140c9565b61244d91906142c5565b90506000811115612474578082600201600082825461246c9190614073565b925050819055505b505b82816000018190555064e8d4a51000826003015484612495919061426b565b61249f91906140c9565b81600101819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd6ef254dd6367b57551dfe9aaff9ad467b40df74d0cd138894a3388d0a935c0b856040516125049190613e98565b60405180910390a350505050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015490506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905014156125b557600092505050612700565b60008290505b81805490508110156126e95742828281548110612601577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111580156126c65750818181548110612683577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1642105b156126d657809350505050612700565b80806126e1906143d6565b9150506125bb565b50600181805490506126fb91906142c5565b925050505b919050565b600080600090505b8383905081101561299357600060016000868685818110612757577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061276c9190613596565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160020154116127b957600080fd5b61280f8585848181106127f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061280a9190613596565b612c35565b60006003600087878681811061284e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906128639190613596565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600064e8d4a51000836003015484600101547f0000000000000000000000000000000000000000000000000000000000000000856000015461291e919061426b565b61292891906140c9565b612932919061426b565b61293c91906140c9565b9050816002015482600101548261295391906142c5565b8661295e9190614073565b6129689190614073565b945060008260020181905550808260010181905550505050808061298b906143d6565b91505061270d565b5061299e84826131d7565b8373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a826040516129e49190613e98565b60405180910390a250505050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff1690806006016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481525050905087565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008181548110612b3f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806002015442111580612c9a57508060050160009054906101000a900460ff16155b80612ce757506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050145b15612cf257506131d4565b6000816004015490506000612d0684612512565b905080821415612f34576000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020846004015481548110612d8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200160018201548152505090506000846002015482600001516fffffffffffffffffffffffffffffffff1611612e73578460020154612e8b565b81600001516fffffffffffffffffffffffffffffffff165b905060008142612e9b91906142c5565b90506000836040015182612eaf919061426b565b905086600101547f00000000000000000000000000000000000000000000000000000000000000008860000154612ee6919061426b565b612ef091906140c9565b64e8d4a5100082612f01919061426b565b612f0b91906140c9565b8760030154612f1a9190614073565b8760030181905550428760020181905550505050506131d0565b60008290505b8181116131c5576000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612fba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060600160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481525050905060004282602001516fffffffffffffffffffffffffffffffff16116130ae5781602001516fffffffffffffffffffffffffffffffff166130b0565b425b90506000866002015483600001516fffffffffffffffffffffffffffffffff16116130df5786600201546130f7565b82600001516fffffffffffffffffffffffffffffffff165b90506000818361310791906142c5565b9050600084604001518261311b919061426b565b905088600101547f00000000000000000000000000000000000000000000000000000000000000008a60000154613152919061426b565b61315c91906140c9565b64e8d4a510008261316d919061426b565b61317791906140c9565b89600301546131869190614073565b896003018190555084602001516fffffffffffffffffffffffffffffffff168960020181905550505050505080806131bd906143d6565b915050612f3a565b508083600401819055505b5050505b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016132329190613c4c565b60206040518083038186803b15801561324a57600080fd5b505afa15801561325e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328291906138de565b90508082111561333f577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016132e7929190613c9e565b602060405180830381600087803b15801561330157600080fd5b505af1158015613315573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613339919061388c565b506133ee565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161339a929190613c9e565b602060405180830381600087803b1580156133b457600080fd5b505af11580156133c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133ec919061388c565b505b505050565b604051806060016040528060006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff168152602001600081525090565b600061344b61344684613fc4565b613f9f565b9050808382526020820190508285602086028201111561346a57600080fd5b60005b8581101561349a5781613480888261356c565b84526020840193506020830192505060018101905061346d565b5050509392505050565b6000813590506134b3816146ad565b92915050565b6000815190506134c8816146ad565b92915050565b60008083601f8401126134e057600080fd5b8235905067ffffffffffffffff8111156134f957600080fd5b60208301915083602082028301111561351157600080fd5b9250929050565b600082601f83011261352957600080fd5b8135613539848260208601613438565b91505092915050565b600081519050613551816146c4565b92915050565b600081359050613566816146db565b92915050565b60008135905061357b816146f2565b92915050565b600081519050613590816146f2565b92915050565b6000602082840312156135a857600080fd5b60006135b6848285016134a4565b91505092915050565b6000602082840312156135d157600080fd5b60006135df848285016134b9565b91505092915050565b600080604083850312156135fb57600080fd5b6000613609858286016134a4565b925050602061361a858286016134a4565b9150509250929050565b600080600080600060a0868803121561363c57600080fd5b600061364a888289016134a4565b955050602061365b888289016134a4565b945050604061366c888289016134a4565b935050606061367d8882890161356c565b925050608061368e8882890161356c565b9150509295509295909350565b6000806000604084860312156136b057600080fd5b60006136be868287016134a4565b935050602084013567ffffffffffffffff8111156136db57600080fd5b6136e7868287016134ce565b92509250509250925092565b6000806000806080858703121561370957600080fd5b6000613717878288016134a4565b945050602085013567ffffffffffffffff81111561373457600080fd5b61374087828801613518565b935050604085013567ffffffffffffffff81111561375d57600080fd5b61376987828801613518565b925050606085013567ffffffffffffffff81111561378657600080fd5b61379287828801613518565b91505092959194509250565b600080604083850312156137b157600080fd5b60006137bf858286016134a4565b92505060206137d08582860161356c565b9150509250929050565b600080600080608085870312156137f057600080fd5b60006137fe878288016134a4565b945050602061380f8782880161356c565b935050604061382087828801613557565b925050606061383187828801613557565b91505092959194509250565b60008060006060848603121561385257600080fd5b6000613860868287016134a4565b93505060206138718682870161356c565b92505060406138828682870161356c565b9150509250925092565b60006020828403121561389e57600080fd5b60006138ac84828501613542565b91505092915050565b6000602082840312156138c757600080fd5b60006138d58482850161356c565b91505092915050565b6000602082840312156138f057600080fd5b60006138fe84828501613581565b91505092915050565b60006139138383613bce565b60608301905092915050565b600061392b8383613c2e565b60208301905092915050565b613940816142f9565b82525050565b61394f816142f9565b82525050565b600061396082614010565b61396a8185614040565b935061397583613ff0565b8060005b838110156139a657815161398d8882613907565b975061399883614026565b925050600181019050613979565b5085935050505092915050565b60006139be8261401b565b6139c88185614051565b93506139d383614000565b8060005b83811015613a045781516139eb888261391f565b97506139f683614033565b9250506001810190506139d7565b5085935050505092915050565b613a1a8161430b565b82525050565b613a298161435d565b82525050565b613a3881614381565b82525050565b6000613a4b601783614062565b9150613a56826144ca565b602082019050919050565b6000613a6e602a83614062565b9150613a79826144f3565b604082019050919050565b6000613a91601483614062565b9150613a9c82614542565b602082019050919050565b6000613ab4601d83614062565b9150613abf8261456b565b602082019050919050565b6000613ad7602483614062565b9150613ae282614594565b604082019050919050565b6000613afa602083614062565b9150613b05826145e3565b602082019050919050565b6000613b1d603d83614062565b9150613b288261460c565b604082019050919050565b6000613b40601883614062565b9150613b4b8261465b565b602082019050919050565b6000613b63601983614062565b9150613b6e82614684565b602082019050919050565b608082016000820151613b8f6000850182613937565b506020820151613ba26020850182613937565b506040820151613bb56040850182613c2e565b506060820151613bc86060850182613c2e565b50505050565b606082016000820151613be46000850182613c10565b506020820151613bf76020850182613c10565b506040820151613c0a6040850182613c2e565b50505050565b613c1981614317565b82525050565b613c2881614317565b82525050565b613c3781614353565b82525050565b613c4681614353565b82525050565b6000602082019050613c616000830184613946565b92915050565b6000606082019050613c7c6000830186613946565b613c896020830185613946565b613c966040830184613c3d565b949350505050565b6000604082019050613cb36000830185613946565b613cc06020830184613c3d565b9392505050565b60006020820190508181036000830152613ce18184613955565b905092915050565b60006020820190508181036000830152613d0381846139b3565b905092915050565b6000602082019050613d206000830184613a20565b92915050565b6000602082019050613d3b6000830184613a2f565b92915050565b60006020820190508181036000830152613d5a81613a3e565b9050919050565b60006020820190508181036000830152613d7a81613a61565b9050919050565b60006020820190508181036000830152613d9a81613a84565b9050919050565b60006020820190508181036000830152613dba81613aa7565b9050919050565b60006020820190508181036000830152613dda81613aca565b9050919050565b60006020820190508181036000830152613dfa81613aed565b9050919050565b60006020820190508181036000830152613e1a81613b10565b9050919050565b60006020820190508181036000830152613e3a81613b33565b9050919050565b60006020820190508181036000830152613e5a81613b56565b9050919050565b6000606082019050613e766000830186613c1f565b613e836020830185613c1f565b613e906040830184613c3d565b949350505050565b6000602082019050613ead6000830184613c3d565b92915050565b6000606082019050613ec86000830186613c3d565b613ed56020830185613c1f565b613ee26040830184613c1f565b949350505050565b6000608082019050613eff6000830187613c3d565b613f0c6020830186613c3d565b613f196040830185613c3d565b613f266060830184613c3d565b95945050505050565b600061014082019050613f45600083018a613c3d565b613f526020830189613c3d565b613f5f6040830188613c3d565b613f6c6060830187613c3d565b613f796080830186613c3d565b613f8660a0830185613a11565b613f9360c0830184613b79565b98975050505050505050565b6000613fa9613fba565b9050613fb582826143a5565b919050565b6000604051905090565b600067ffffffffffffffff821115613fdf57613fde61447d565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061407e82614353565b915061408983614353565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156140be576140bd61441f565b5b828201905092915050565b60006140d482614353565b91506140df83614353565b9250826140ef576140ee61444e565b5b828204905092915050565b6000808291508390505b6001851115614144578086048111156141205761411f61441f565b5b600185161561412f5780820291505b808102905061413d856144bd565b9450614104565b94509492505050565b600061415882614353565b915061416383614353565b92506141907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484614198565b905092915050565b6000826141a85760019050614264565b816141b65760009050614264565b81600181146141cc57600281146141d657614205565b6001915050614264565b60ff8411156141e8576141e761441f565b5b8360020a9150848211156141ff576141fe61441f565b5b50614264565b5060208310610133831016604e8410600b841016171561423a5782820a9050838111156142355761423461441f565b5b614264565b61424784848460016140fa565b9250905081840481111561425e5761425d61441f565b5b81810290505b9392505050565b600061427682614353565b915061428183614353565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156142ba576142b961441f565b5b828202905092915050565b60006142d082614353565b91506142db83614353565b9250828210156142ee576142ed61441f565b5b828203905092915050565b600061430482614333565b9050919050565b60008115159050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006143688261436f565b9050919050565b600061437a82614333565b9050919050565b600061438c82614393565b9050919050565b600061439e82614333565b9050919050565b6143ae826144ac565b810181811067ffffffffffffffff821117156143cd576143cc61447d565b5b80604052505050565b60006143e182614353565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156144145761441361441f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f436f6d70616e792061646472657373206e6f7420736574000000000000000000600082015250565b7f41737365743a20737461727454696d65206d757374206265206c65737320746860008201527f616e20656e6454696d6500000000000000000000000000000000000000000000602082015250565b7f506f6f6c206e6f7420696e697469616c697a6564000000000000000000000000600082015250565b7f417373657420726573657276652061646472657373206e6f7420736574000000600082015250565b7f41737365743a20616d6f756e74206d757374206265206772656174657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920757365722063616e2073657420636c61696d207265636569766572600082015250565b7f526577617264734469737472696275746f723a2063616c6c6572206973206e6f60008201527f742074686520526577617264734469737472696275746f7241646d696e000000602082015250565b7f506f6f6c20616c726561647920696e697469616c697a65640000000000000000600082015250565b7f456d697373696f6e207363686564756c65206e6f742073657400000000000000600082015250565b6146b6816142f9565b81146146c157600080fd5b50565b6146cd8161430b565b81146146d857600080fd5b50565b6146e481614317565b81146146ef57600080fd5b50565b6146fb81614353565b811461470657600080fd5b5056fea2646970667358221220ada2a9b383ceb0fa8773c91c7f86c2fd8b60fe5309d2c4c1668870ad2d93657764736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9504,
        "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
        "label": "registeredAssets",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 9509,
        "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
        "label": "poolInfo",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(PoolInfo)11253_storage)"
      },
      {
        "astId": 9515,
        "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
        "label": "emissionSchedule",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(EmissionPoint)11260_storage)dyn_storage)"
      },
      {
        "astId": 9522,
        "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
        "label": "userInfo",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11237_storage))"
      },
      {
        "astId": 9526,
        "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
        "label": "claimReceiver",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(EmissionPoint)11260_storage)dyn_storage": {
        "base": "t_struct(EmissionPoint)11260_storage",
        "encoding": "dynamic_array",
        "label": "struct IRewardsDistributor.EmissionPoint[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_struct(EmissionPoint)11260_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardsDistributor.EmissionPoint[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(EmissionPoint)11260_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11237_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct IRewardsDistributor.UserInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(UserInfo)11237_storage)"
      },
      "t_mapping(t_address,t_struct(PoolInfo)11253_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardsDistributor.PoolInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolInfo)11253_storage"
      },
      "t_mapping(t_address,t_struct(UserInfo)11237_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IRewardsDistributor.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)11237_storage"
      },
      "t_struct(Commission)11228_storage": {
        "encoding": "inplace",
        "label": "struct IRewardsDistributor.Commission",
        "members": [
          {
            "astId": 11221,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "companyAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11223,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "assetReserveAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 11225,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "companyCommission",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11227,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "assetReserveCommission",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(EmissionPoint)11260_storage": {
        "encoding": "inplace",
        "label": "struct IRewardsDistributor.EmissionPoint",
        "members": [
          {
            "astId": 11255,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "startTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 11257,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "endTime",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 11259,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "rewardsPerSecond",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(PoolInfo)11253_storage": {
        "encoding": "inplace",
        "label": "struct IRewardsDistributor.PoolInfo",
        "members": [
          {
            "astId": 11239,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "totalSupply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11241,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "decimals",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 11243,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "lastRewardTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11245,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "accRewardPerShare",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 11247,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "currentEmissionPoint",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 11249,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "isInitialized",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 11252,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "commission",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(Commission)11228_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(UserInfo)11237_storage": {
        "encoding": "inplace",
        "label": "struct IRewardsDistributor.UserInfo",
        "members": [
          {
            "astId": 11230,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11232,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "rewardDebt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 11234,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "baseClaimable",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11236,
            "contract": "contracts/v3/RewardsDistributor.sol:RewardsDistributor",
            "label": "lastEmissionPoint",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}